@using EmployeeLeave.Data.Identity
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var isAdmin = await UserManager.IsInRoleAsync(user, "Admin");

        @if (isAdmin)
        {
            <li class="nav-item">
                <a class="nav-link " asp-controller="Leave" asp-action="LeaveList" title="Manage">Leave List</a>
            </li>
            <li class="nav-item">
                <a class="nav-link " asp-controller="Account" asp-action="ApproveUsers">Pending Approvals</a>
            </li>
            <li class="nav-item">
                <a class="nav-link " asp-controller="Account" asp-action="AllEmployee">Employee List</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link " asp-controller="Leave" asp-action="MyLeaves" title="Manage">My Leave</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link " asp-controller="Profile" asp-action="Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="nav-link btn btn-link ">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link " asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
